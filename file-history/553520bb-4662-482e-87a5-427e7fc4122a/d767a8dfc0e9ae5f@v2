# Pre-commit hooks configuration for rangebar
# Install: pip install pre-commit && pre-commit install
#
# IMPORTANT: This does NOT run cargo clean!
# - cargo clean deletes build artifacts (40GB+)
# - Running it on every commit would require full rebuilds (5-15 min each)
# - Build artifacts are cleaned by scheduled task instead
#   See: ~/Library/LaunchAgents/com.user.cleanup-dev.plist (runs daily at 2 AM)
#
# Purpose: Prevent large files from being committed to git version control

repos:
  # Rust formatting and linting
  - repo: local
    hooks:
      - id: cargo-fmt
        name: cargo-fmt
        description: Format Rust code with cargo fmt
        entry: cargo fmt --all -- --check
        language: system
        files: \.rs$
        pass_filenames: false
        
      - id: cargo-clippy
        name: cargo-clippy
        description: Lint Rust code with clippy
        entry: cargo clippy --all-targets --all-features -- -D warnings
        language: system
        files: \.rs$
        pass_filenames: false
        
      - id: cargo-test
        name: cargo-nextest
        description: Run tests with cargo nextest
        entry: cargo nextest run
        language: system
        files: \.rs$
        pass_filenames: false
        
      - id: cargo-deny
        name: cargo-deny
        description: Check dependencies with cargo deny
        entry: cargo deny check
        language: system
        files: Cargo\.(toml|lock)$
        pass_filenames: false


  # General file checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.6.0
    hooks:
      - id: trailing-whitespace
        exclude: \.md$
      - id: end-of-file-fixer
        exclude: \.md$
      - id: check-toml
      - id: check-yaml
      - id: check-json
        exclude: \.vscode/
      - id: check-added-large-files
        args: ['--maxkb=5120']  # 5MB limit (prevents accidentally committing large files to git)
      - id: check-merge-conflict
      - id: check-case-conflict
      - id: detect-private-key