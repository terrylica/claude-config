[package]
name = "rangebar"
version = "2.2.0"
authors = ["Terry Li <terry@eonlabs.com>"]
categories = ["algorithms", "data-structures", "finance"]
documentation = "https://docs.rs/rangebar"
edition = "2024"
homepage = "https://github.com/Eon-Labs/rangebar"
keywords = ["finance", "trading", "range-bars", "cryptocurrency", "binance"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/Eon-Labs/rangebar"
rust-version = "1.90"
description = "Non-lookahead range bar construction for cryptocurrency trading with temporal integrity guarantees"

exclude = [
    "CLAUDE.md",                     # Project memory - never publish
    "docs/",                         # Documentation reports (not for crate users)
    "src/bin/rangebar_export.rs",   # Temporarily excluded - uses data module
    "src/data/",                     # Data module temporarily excluded
    "examples/analysis/",            # Examples using data module
    "examples/investigation/",       # Examples using data module
    "examples/interactive/",         # Examples using data module
    "examples/validation/",          # Examples using data module
    "test_date_investigation.rs",    # Uses data module
    "*.py",
    "*.ipynb",
    "test_data/",
    "test_output/",
    "test_regression/",
    "test_single/",
    "test_spot/",
    "test_thresholds/",
    "data/",
    "output/",
    "range_bar_charts/",
    "statistical_analysis/",
    "visualization/",
    "web/",
    "adversarial_test_output/",
    "milestones/",
    ".venv/",
    "repos/",
    ".pytest_cache/",
    "benchmark_data/",
    "binance_futures_*.txt"          # Generated symbol lists
]

[badges]
maintenance = { status = "actively-developed" }

[lib]
name = "rangebar"
crate-type = ["rlib"]  # Pure Rust library

# Temporarily disabled - requires data module
# [[bin]]
# name = "rangebar-export"
# path = "src/bin/rangebar_export.rs"

[[bin]]
name = "rangebar-analyze"
path = "src/bin/parallel_tier1_analysis.rs"

[[bin]]
name = "tier1-symbol-discovery"
path = "src/bin/tier1_symbol_discovery.rs"

[[bin]]
name = "data-structure-validator"
path = "src/bin/data_structure_validator.rs"

[[bin]]
name = "spot-tier1-processor"
path = "src/bin/spot_tier1_processor.rs"

[[bin]]
name = "polars-benchmark"
path = "src/bin/polars_benchmark.rs"

[[bin]]
name = "temporal-integrity-validator"
path = "src/bin/temporal_integrity_test_only.rs"

# Examples temporarily disabled - require data module
# Analysis Examples
# [[example]]
# name = "analysis-market-efficiency"
# path = "examples/analysis/market_efficiency_analysis.rs"

# [[example]]
# name = "analysis-rangebar-generation"
# path = "examples/analysis/rangebar_generation_comparison.rs"

# [[example]]
# name = "analysis-tier1-volume"
# path = "examples/analysis/tier1_volume_comparison.rs"

# [[example]]
# name = "analysis-tier1-symbols"
# path = "examples/analysis/tier1_symbols.rs"

# Interactive Examples
# [[example]]
# name = "historical-replay"
# path = "examples/interactive/historical_replay.rs"

# [[example]]
# name = "test-historical-replay"
# path = "examples/interactive/test_historical_replay.rs"

# [[example]]
# name = "format-demo"
# path = "examples/interactive/format_demo.rs"

# [[example]]
# name = "market-comparison-demo"
# path = "examples/interactive/market_comparison_demo.rs"

# Educational Examples
[[example]]
name = "terminology-clarification"
path = "examples/educational/terminology_clarification.rs"

[[example]]
name = "basic-usage"
path = "examples/educational/basic_usage.rs"

# Validation Examples (temporarily disabled)
# [[example]]
# name = "validate-25bps-threshold"
# path = "examples/validation/validate_25bps_threshold.rs"

# [[example]]
# name = "validate-custom-threshold"
# path = "examples/validation/validate_custom_threshold.rs"

# Investigation Examples (temporarily disabled)
# [[example]]
# name = "investigation-date-availability"
# path = "examples/investigation/date_availability_investigation.rs"

# [[example]]
# name = "investigation-timestamp-analysis"
# path = "examples/investigation/timestamp_analysis.rs"

[[bench]]
name = "rangebar_bench"
harness = false

[dependencies]
rayon = "^1.11"
serde = { version = "^1.0", features = ["derive"] }
serde_json = { version = "1.0", features = ["arbitrary_precision"] }
thiserror = "2.0"
csv = "1.3"
# Core async dependencies
chrono = { version = "^0.4", features = ["serde"] }
clap = { version = "^4.0", features = ["derive", "env"] }
num_cpus = "1.16"
futures = "0.3"
futures-util = "0.3"
reqwest = { version = "^0.12", features = ["stream"] }
tokio = { version = "^1.0", features = ["full"] }
zip = "2.2"
config = "0.14"

# Streaming processing
tokio-stream = "0.1"

# WebSocket streaming
tokio-tungstenite = { version = "0.23", features = ["native-tls"] }
async-trait = "0.1"

# Web framework and API dependencies (optional)
axum = { version = "0.7", features = ["json", "multipart", "ws"], optional = true }
tower = { version = "0.4", features = ["limit", "timeout"], optional = true }
tower-http = { version = "0.5", features = ["cors", "trace", "compression-br"], optional = true }
utoipa = { version = "4.2", features = ["axum_extras", "chrono", "uuid"], optional = true }
tracing = { version = "0.1", optional = true }
tracing-subscriber = { version = "0.3", features = ["env-filter", "json"], optional = true }
validator = { version = "0.19", features = ["derive"], optional = true }
uuid = { version = "1.6", features = ["v4", "serde"], optional = true }

# State-of-the-art streaming statistics (2024-2025)
rolling-stats = { version = "0.1", optional = true }  # Numerically stable variance
tdigests = { version = "1.0", optional = true }      # Streaming percentiles <2% error
# streaming_algorithms = { version = "0.1", optional = true }  # SIMD-accelerated algorithms (disabled due to packed_simd compatibility)

polars = { version = "^0.51.0", features = ["lazy", "temporal", "strings", "parquet", "csv", "ipc", "rolling_window"], optional = true }

# Data integrity validation (optional)
md5 = { version = "0.7", optional = true }
sha2 = { version = "0.10", optional = true }


# Python bindings (optional)
pyo3 = { version = "0.26", features = ["extension-module", "abi3-py38"], optional = true }
once_cell = "1.21"
toml = "0.8"
byteorder = "1.5.0"
lzma-rs = "0.3.0"


[dev-dependencies]
criterion = { version = "0.5", features = ["html_reports"] }
toml = "0.8"
tempfile = "3.8"

[profile.release]
lto = true              # Link-time optimization for better performance
codegen-units = 1       # Single codegen unit for better optimization  
overflow-checks = false # Disable overflow checks in release for speed
panic = "abort"         # Smaller binary size

[profile.dev]
overflow-checks = true  # Keep overflow checks in debug builds

[features]
default = ["streaming-v2", "data-integrity"]  # Core features for most users
simd = []  # Optional SIMD optimizations
debug = []  # Debug utilities and diagnostics
test-utils = []  # Test utilities for external testing

# Execution modes (dual-path architecture)
streaming-mode = ["streaming-stats", "real-time-indicators"]
batch-mode = ["polars-analytics"]
hybrid-mode = ["streaming-mode", "batch-mode"]

# Output capabilities
polars-io = ["dep:polars"]
export-formats = ["polars-io"]

# Analytics levels
analytics = ["polars-analytics", "streaming-stats"]

# Core feature groups
streaming-stats = ["dep:rolling-stats", "dep:tdigests"]
polars-analytics = ["polars-io"]
real-time-indicators = []  # Technical indicators for live trading
streaming-v2 = []  # Production-ready streaming architecture
data-integrity = ["dep:sha2", "dep:md5"]

# Web API and service capabilities
api = ["dep:axum", "dep:tower", "dep:tower-http", "dep:utoipa",
       "dep:tracing", "dep:tracing-subscriber", "dep:validator", "dep:uuid"]

# Python integration
python = ["dep:pyo3", "polars-analytics"]

# Combined feature sets (user-friendly)
researcher = ["analytics", "export-formats"]
trader = ["streaming-mode", "api"]
full = ["researcher", "trader", "python"]
production = ["streaming-v2", "data-integrity"]
