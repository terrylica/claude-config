# Terminal Setup Guide

## Ghostty Terminal Emulator

### Remote SSH Focus Tracking Issue

**Problem**: `[O[I[O[I` escape sequences appearing in input when clicking outside terminal during SSH sessions.

**Root Cause**: Terminal focus event tracking mode (DECSET 1004) enabled by shell configuration (Oh My Zsh, zsh-autosuggestions, or tmux).

**Solution**: Disable focus events in shell initialization.

#### Fix for zsh (with Powerlevel10k)

Add to `~/.zshrc` after instant prompt section:

```zsh
# Disable focus tracking (prevents [O[I escape sequences in Ghostty)
printf '\033[?1004l' >/dev/null 2>&1
```

**Placement**: Must be after Powerlevel10k instant prompt block (after line ~6) to avoid console output warnings.

#### Fix for tmux

Add to `~/.tmux.conf`:

```tmux
# Disable focus events
set -g focus-events off
```

Apply: `tmux source-file ~/.tmux.conf`

### Terminfo Installation for Remote Systems

Ghostty uses `TERM=xterm-ghostty`. Install terminfo on remote servers:

```bash
# On local machine (with Ghostty)
infocmp xterm-ghostty > /tmp/xterm-ghostty.ti
scp /tmp/xterm-ghostty.ti remote-host:/tmp/

# On remote machine
tic -x /tmp/xterm-ghostty.ti  # Installs to ~/.terminfo/
rm /tmp/xterm-ghostty.ti
```

#### Enable TERM Forwarding

**Local** `~/.ssh/config`:
```ssh
Host remote-host
    SendEnv TERM
```

**Remote** `/etc/ssh/sshd_config` (requires sudo):
```
AcceptEnv TERM
```

Restart sshd: `sudo systemctl restart sshd`

### Dark Theme Syntax Highlighting

For zsh-syntax-highlighting on dark backgrounds, add to `~/.zshrc`:

```zsh
# Fix comment visibility on dark backgrounds
ZSH_HIGHLIGHT_STYLES[comment]='fg=244,italic'  # Gray
ZSH_HIGHLIGHT_STYLES[alias]='fg=cyan,bold'
ZSH_HIGHLIGHT_STYLES[builtin]='fg=cyan'
ZSH_HIGHLIGHT_STYLES[command]='fg=green'
```

### SSH Clipboard Integration (OSC 52)

Enable Claude Code `/export` to copy to macOS clipboard over SSH:

**See**: [ssh-clipboard-osc52.md](ssh-clipboard-osc52.md) for complete setup

**Quick setup**:
1. Local Ghostty: Add `clipboard-write = allow` to `~/.config/ghostty/config`
2. Remote Linux: Install xclip wrapper to `~/.local/bin/xclip`

The wrapper emits OSC 52 escape sequences that travel over SSH and are interpreted by Ghostty to update the macOS system clipboard.

## Troubleshooting

### Check Current Focus Tracking State

```bash
# This command should produce no output if disabled
printf '\033[?1004l'
```

### Reset Terminal State

```bash
reset  # Full terminal reset
```

### Verify No Console Output During Shell Init

Exit and reconnect - you should see no Powerlevel10k warnings about console output.
