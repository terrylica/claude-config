[project]
name = "ml-feature-experiments"
version = "0.1.0"
description = "Experimental research repository for ML feature engineering, data collection, and fail-fast validation"
readme = "MIGRATION_SUMMARY.md"
authors = [
    { name = "Eon Labs", email = "terry@eonlabs.ai" }
]
requires-python = ">=3.10"
dependencies = [
    "gapless-crypto-data>=2.0.4",
    "pandas>=2.3.0",
    "numpy>=2.3.0",
    "scipy>=1.14.0",
    "scikit-learn>=1.5.0",
    "loguru>=0.7.0",
    "pytz>=2025.0",
    "requests>=2.32.0",
]

[project.optional-dependencies]
# Feature engineering dependencies
feature-engineering = [
    "stumpy>=1.13.0",
    "ruptures>=1.1.9",
    "pyts>=0.13.0",
]

# Custom fitness dependencies
fitness = [
    "pandas-ta>=0.3.14b",
]

# Fail-fast testing dependencies
fail-fast = [
    "torch>=2.0.0",
    "xgboost>=2.0.0",
    "lightgbm>=4.0.0",
]

# Development dependencies
dev = [
    "pytest>=8.0.0",
    "pytest-cov>=7.0.0",
    "ruff>=0.13.0",
    "mypy>=1.18.0",
]

# All optional dependencies
all = [
    "ml-feature-experiments[feature-engineering,fitness,fail-fast,dev]",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["data_collection", "feature_engineering", "scripts", "utilities"]

[tool.ruff]
line-length = 120
target-version = "py310"

[tool.ruff.lint]
select = ["E", "F", "W", "I", "N", "UP", "B", "A", "C4", "DTZ", "T10", "PIE", "PT", "RET", "SIM", "ARG", "PL"]
ignore = ["PLR0913", "PLR2004"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"
addopts = "-v --cov=data_collection --cov=feature_engineering --cov-report=term-missing"

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
