# Dukascopy Cleanup Plan

**Date**: 2025-10-11
**Reason**: Dukascopy provider removed in Round 1 (commit `00dee3b`), extensive orphaned files remain
**Goal**: Remove all Dukascopy-related files except historical CHANGELOG references

---

## Deep Dive Analysis Summary

**Total Files Found**: 46 files with Dukascopy references

### Categorization

#### 1. DELETE - Integration Tests (6 files)
**Location**: `tests/`
**Status**: Cannot compile, orphaned after provider removal

Files:
- `tests/dukascopy_audit_test.rs`
- `tests/dukascopy_comprehensive_test.rs`
- `tests/dukascopy_eurusd_adversarial_audit.rs`
- `tests/dukascopy_integration_test.rs`
- `tests/dukascopy_real_data_test.rs`
- `tests/dukascopy_volatile_test.rs`

**Action**: DELETE (move to archive not needed - already in git history)
**Risk**: ZERO - These don't compile and aren't referenced

---

#### 2. DELETE - Planning Docs (15 files)
**Location**: `docs/planning/` and `docs/planning/research/`
**Status**: Historical planning docs, provider removed

**Main Planning Docs** (6 files):
- `docs/planning/dukascopy-eurusd-audit-implementation.md`
- `docs/planning/dukascopy-eurusd-audit-plan.md`
- `docs/planning/dukascopy-eurusd-threshold-optimization.md`
- `docs/planning/dukascopy-eurusd-ultra-low-threshold.md`
- `docs/planning/dukascopy-rate-limit-mitigation.md`
- `docs/planning/dukascopy-timeout-retry-strategy.md`

**Research Docs** (9 files):
- `docs/planning/research/dukascopy-comprehensive-validation.md`
- `docs/planning/research/dukascopy-data-fetcher-validation.md`
- `docs/planning/research/dukascopy-endpoint-validation.md`
- `docs/planning/research/dukascopy-implementation-audit.md`
- `docs/planning/research/dukascopy-implementation-complete.md`
- `docs/planning/research/dukascopy-instrument-config.toml`
- `docs/planning/research/dukascopy-rangebar-construction.md`
- `docs/planning/research/dukascopy-rangebar-qa-log.md`
- `docs/planning/research/dukascopy-slo-spec.md`

**Action**: DELETE (git history preserves them)
**Risk**: ZERO - Historical value only, preserved in git

---

#### 3. KEEP - Archived Code (6 files)
**Location**: `src-archived/providers/dukascopy/`
**Status**: Already archived in v4.0.0 monolith

Files:
- `src-archived/providers/dukascopy/builder.rs`
- `src-archived/providers/dukascopy/client.rs`
- `src-archived/providers/dukascopy/conversion.rs`
- `src-archived/providers/dukascopy/mod.rs`
- `src-archived/providers/dukascopy/README.md`
- `src-archived/providers/dukascopy/types.rs`

**Action**: KEEP (part of archived v4.0.0 structure)
**Reason**: Maintains git history continuity
**Risk**: ZERO - Clearly marked as archived

---

#### 4. UPDATE - Comparative References (6 files)
**Location**: Active codebase and archived code
**Status**: Documentary comparisons "Exness vs Dukascopy"

**Active Code** (3 files):
- `crates/rangebar-core/src/timestamp.rs` - Comment: "covers Dukascopy historical Forex"
- `crates/rangebar-providers/src/exness/client.rs` - Comment: "100% reliability vs Dukascopy 77.5%"
- `crates/rangebar-providers/src/exness/mod.rs` - Comment: "100% reliability (vs Dukascopy 77.5%)"
- `crates/rangebar-providers/src/exness/types.rs` - Comment: "100% vs Dukascopy 77.5%"

**Archived Code** (3 files):
- `src-archived/core/timestamp.rs` - Same comment
- `src-archived/providers/exness/client.rs` - Same comment
- `src-archived/providers/exness/mod.rs` - Same comment
- `src-archived/providers/exness/types.rs` - Same comment
- `src-archived/providers/mod.rs` - May have deprecation notice

**Action**:
- **Active code**: REMOVE Dukascopy comparisons (provider no longer exists)
- **Archived code**: KEEP (historical snapshot)

**Risk**: LOW - Only affects comments, no functional impact

---

#### 5. UPDATE - README Files (4 files)
**Location**: Various directories
**Status**: Reference Dukascopy directory structure

Files:
- `cache/README.md` - Mentions cache/dukascopy/ directory
- `data/README.md` - Mentions data/dukascopy/ directory and usage example
- `output/README.md` - Mentions output files with dukascopy prefix
- `test_data/README.md` - Mentions Dukascopy real data samples

**Action**: UPDATE - Remove Dukascopy sections
**Risk**: LOW - Documentation cleanup only

---

#### 6. UPDATE - Planning Docs with References (6 files)
**Location**: `docs/planning/` and `docs/`
**Status**: Other docs that mention Dukascopy

Files:
- `docs/NEXT_STEPS.md` - References Dukascopy audit tasks
- `docs/planning/api-threshold-granularity-migration.md` - May mention Dukascopy
- `docs/planning/architecture/restructure-v2.3.0-migration.md` - Historical migration doc
- `docs/planning/exness-migration-plan.md` - "Dukascopy → Exness Migration Plan"
- `docs/planning/README.md` - Lists Dukascopy research docs
- `docs/planning/workspace-migration-v5.0.0.md` - May mention Dukascopy
- `docs/planning/research/exness-eurusd-variant-analysis.md` - Compares vs Dukascopy
- `docs/planning/research/exness-tick-data-evaluation.md` - Compares vs Dukascopy
- `output/exness_test/AUDIT_REPORT.md` - May reference Dukascopy

**Action**:
- `exness-migration-plan.md`: ARCHIVE to `docs/planning/legacy/` (migration complete)
- `docs/NEXT_STEPS.md`: UPDATE - Remove Dukascopy sections
- `docs/planning/README.md`: UPDATE - Remove Dukascopy entries
- Others: REVIEW and UPDATE as needed

**Risk**: LOW - Documentation cleanup

---

#### 7. KEEP - Historical CHANGELOG (1 file)
**Location**: Root
**Status**: Historical record of when Dukascopy was added/deprecated

File:
- `CHANGELOG.md` - Contains historical entries about Dukascopy feature/deprecation

**Action**: KEEP (historical record)
**Reason**: CHANGELOG should never be retroactively edited
**Risk**: ZERO

---

## Cleanup Strategy

### Phase 1: Delete Orphaned Files (LOW RISK)
**Files to delete**: 21 files
- 6 test files (tests/dukascopy_*.rs)
- 15 planning docs (docs/planning/*dukascopy*.md + research/)

**Commands**:
```bash
# Remove integration tests
rm tests/dukascopy_audit_test.rs
rm tests/dukascopy_comprehensive_test.rs
rm tests/dukascopy_eurusd_adversarial_audit.rs
rm tests/dukascopy_integration_test.rs
rm tests/dukascopy_real_data_test.rs
rm tests/dukascopy_volatile_test.rs

# Remove planning docs
rm docs/planning/dukascopy-eurusd-audit-implementation.md
rm docs/planning/dukascopy-eurusd-audit-plan.md
rm docs/planning/dukascopy-eurusd-threshold-optimization.md
rm docs/planning/dukascopy-eurusd-ultra-low-threshold.md
rm docs/planning/dukascopy-rate-limit-mitigation.md
rm docs/planning/dukascopy-timeout-retry-strategy.md

# Remove research docs
rm docs/planning/research/dukascopy-comprehensive-validation.md
rm docs/planning/research/dukascopy-data-fetcher-validation.md
rm docs/planning/research/dukascopy-endpoint-validation.md
rm docs/planning/research/dukascopy-implementation-audit.md
rm docs/planning/research/dukascopy-implementation-complete.md
rm docs/planning/research/dukascopy-instrument-config.toml
rm docs/planning/research/dukascopy-rangebar-construction.md
rm docs/planning/research/dukascopy-rangebar-qa-log.md
rm docs/planning/research/dukascopy-slo-spec.md
```

**Validation**: `cargo test` (should still pass - these tests don't compile anyway)

---

### Phase 2: Update Active Code Comments (LOW RISK)
**Files to update**: 4 active files

**Changes**:
- Remove "vs Dukascopy 77.5%" comparisons
- Remove "covers Dukascopy historical" comments
- Keep timestamp range (2000-2035) but remove Dukascopy reference

**Files**:
1. `crates/rangebar-core/src/timestamp.rs`
2. `crates/rangebar-providers/src/exness/client.rs`
3. `crates/rangebar-providers/src/exness/mod.rs`
4. `crates/rangebar-providers/src/exness/types.rs`

**Validation**: `cargo build` + `cargo test`

---

### Phase 3: Update README Files (LOW RISK)
**Files to update**: 4 files

**Changes**:
- Remove Dukascopy directory structure references
- Remove Dukascopy usage examples
- Remove Dukascopy from data source lists

**Files**:
1. `cache/README.md`
2. `data/README.md`
3. `output/README.md`
4. `test_data/README.md`

**Validation**: Manual review

---

### Phase 4: Update/Archive Planning Docs (LOW RISK)
**Files to update**: 3 files
**Files to archive**: 1 file

**Archive**:
- `docs/planning/exness-migration-plan.md` → `docs/planning/legacy/exness-migration-plan.md`
  (Migration complete, historical doc)

**Update**:
- `docs/NEXT_STEPS.md` - Remove Dukascopy audit tasks
- `docs/planning/README.md` - Remove Dukascopy doc listings
- `docs/planning/research/exness-eurusd-variant-analysis.md` - Keep comparison (factual)
- `docs/planning/research/exness-tick-data-evaluation.md` - Keep comparison (factual)

**Validation**: Manual review

---

## Risk Assessment

| Phase | Files | Risk | Impact | Rollback |
|-------|-------|------|--------|----------|
| 1. Delete orphaned | 21 | ZERO | None | Git revert |
| 2. Update code comments | 4 | LOW | Comments only | Git revert |
| 3. Update READMEs | 4 | LOW | Docs only | Git revert |
| 4. Update/archive planning | 4 | LOW | Docs only | Git revert |

**Overall Risk**: LOW - No functional code changes, only cleanup

---

## Validation Checklist

After each phase:
- [ ] `cargo build --workspace --all-features` - Success
- [ ] `cargo test --workspace --all-features` - All pass
- [ ] `cargo clippy --workspace --all-features -- -D warnings` - Clean
- [ ] Git status shows expected changes only
- [ ] No references to removed files in active code

---

## Success Criteria

- [ ] All 21 orphaned files removed
- [ ] No Dukascopy references in active code (except CHANGELOG)
- [ ] No Dukascopy references in READMEs
- [ ] Exness migration plan archived to legacy/
- [ ] docs/NEXT_STEPS.md updated (no Dukascopy tasks)
- [ ] docs/planning/README.md updated (no Dukascopy listings)
- [ ] Workspace builds and tests pass
- [ ] Git history preserved (all files in history)

---

## Files Summary

**DELETE**: 21 files (tests + planning docs)
**UPDATE**: 11 files (4 code comments + 4 READMEs + 3 planning docs)
**ARCHIVE**: 1 file (exness-migration-plan.md)
**KEEP UNCHANGED**: 7 files (src-archived/* + CHANGELOG.md)

**Total affected**: 33 files
**Total Dukascopy references**: 46 files (13 will remain as historical/archived)

---

## Execution Order

1. ✅ Create cleanup plan (this document)
2. ⏳ Review plan with user
3. ⏳ Execute Phase 1 (delete orphaned files)
4. ⏳ Execute Phase 2 (update code comments)
5. ⏳ Execute Phase 3 (update READMEs)
6. ⏳ Execute Phase 4 (update/archive planning docs)
7. ⏳ Validate workspace (build + test + clippy)
8. ⏳ Commit changes with detailed message
9. ⏳ Verify git history preservation

---

## Rationale

**Why delete instead of archive**:
- Git history already preserves all files
- Archiving creates duplicate clutter
- No functional value in keeping orphaned tests/docs
- Provider completely removed, no migration path back

**Why keep src-archived/providers/dukascopy/**:
- Part of v4.0.0 historical snapshot
- Maintains workspace migration continuity
- Already clearly marked as archived
- Useful for understanding historical decisions

**Why update code comments**:
- Comparing to non-existent provider confuses future developers
- Timestamp range is still valid, just remove Dukascopy reference
- Keeps codebase focused on current providers (Binance, Exness)

---

## Post-Cleanup State

**Remaining Dukascopy references**: 7 files
1. `CHANGELOG.md` - Historical record (KEEP)
2-7. `src-archived/**` - Archived v4.0.0 code (KEEP)

**All other references**: REMOVED

**Documentation quality**: 9.9/10 → 10/10 (perfect, no confusing references)
