# mql5-crossover Project Memory

**Architecture**: Link Farm + Hub-and-Spoke with Progressive Disclosure

## Navigation Index

**Entry Point**: `/Users/terryli/eon/mql5-crossover/README.md ` - Project overview and quick start

## Core Guides

- **[QUICKSTART.md](docs/guides/QUICKSTART.md)** - 5-minute setup and validation
- **[AI_AGENT_WORKFLOW.md](docs/guides/AI_AGENT_WORKFLOW.md)** - Complete development workflow for AI agents
- **[CROSSOVER_MQ5.md](docs/guides/CROSSOVER_MQ5.md)** - MT5/CrossOver technical reference and shell setup

## Implementation Plans

- **[HEADLESS_EXECUTION_PLAN.md](docs/plans/HEADLESS_EXECUTION_PLAN.md)** - v3.0.0 Python API approach (COMPLETE)
  - **Supersedes**: v2.0.0 startup.ini approach (conditionally working only)
  - **Key Achievement**: True headless execution without GUI initialization
  - **Status**: All 5 phases complete, cold start validated

## Validation Reports

- **[VALIDATION_STATUS.md](docs/reports/VALIDATION_STATUS.md)** - Current SLO metrics and test results
- **[SUCCESS_REPORT.md](docs/reports/SUCCESS_REPORT.md)** - Manual and headless validation (0.999902 correlation)

## Architecture

### Directory Structure
```
mql5/          # MQL5 source (Scripts/, Include/, Samples/)
python/        # Python validation tools
scripts/       # Automation (mq5run wrapper for v2.0.0)
docs/          # Documentation (guides/, plans/, reports/, archive/)
config/        # MT5 configuration files
exports/       # CSV outputs (gitignored)
logs/          # Execution logs (gitignored)
```

### Single Source of Truth

| Topic | Authoritative Document |
|-------|------------------------|
| Quick Start | `docs/guides/QUICKSTART.md` |
| Development Workflow | `docs/guides/AI_AGENT_WORKFLOW.md` |
| MT5/CrossOver Setup | `docs/guides/CROSSOVER_MQ5.md` |
| Headless Execution (v3.0.0) | `docs/plans/HEADLESS_EXECUTION_PLAN.md` |
| Validation Status | `docs/reports/VALIDATION_STATUS.md` |
| Historical Context | `docs/archive/historical.txt` |

## Key Commands

```bash
# Compile MQL5
mq5c mql5/Scripts/ExportAligned.mq5

# Export data (v3.0.0 - true headless)
cxstart --bottle "MetaTrader 5" -- cmd /c "python C:\users\crossover\export_aligned.py --symbol EURUSD --period M1 --bars 5000"

# Export data (v2.0.0 - conditional)
./scripts/mq5run --symbol EURUSD --period PERIOD_M1

# Validate
python python/validate_export.py exports/Export_EURUSD_PERIOD_M1.csv
```

## Service Level Objectives

- **Availability**: 100% ✓ (20 files accessible)
- **Correctness**: 100% ✓ (0.999902 correlation, all references resolved)
- **Observability**: 100% ✓ (14 reorg commits)
- **Maintainability**: 100% ✓ (organized hierarchy, language conventions)

## Critical Limitations

### v3.0.0 (Python API) - RECOMMENDED
- ✅ **True headless** - works for any symbol/timeframe without GUI
- ✅ Cold start validated: XAUUSD M1/H1 successful
- Requires: Wine Python 3.12+ with MetaTrader5 5.0.5328 and NumPy 1.26.4

### v2.0.0 (startup.ini) - LEGACY
- ⚠️ **Conditional** - requires manual GUI initialization per symbol/timeframe
- Each new symbol must be opened in MT5 GUI once before headless works
- Use v3.0.0 Python API approach instead for true headless capability

## Research Context

**Historical Findings**: `docs/archive/historical.txt ` (2022-2025 community research)
**Archived Plans**: `docs/archive/HEADLESS_EXECUTION_PLAN.v2.0.0.archived.md ` (startup.ini approach)

## Project Status

- **Version**: 1.0.0 (reorganization complete 2025-10-13)
- **Headless Execution**: v3.0.0 COMPLETE (Python API)
- **Validation**: PASSED (0.999902 RSI correlation)
- **Structure**: Clean organized hierarchy with SLO compliance

---

**Navigation Tip**: All paths are relative from project root. Use Cmd+click in Ghostty terminal for direct file access.
