"""Test exact failing timestamp from validation: 2025-03-17 06:00:00"""
import pandas as pd
import numpy as np
from datetime import datetime, timezone, timedelta
from atr_adaptive_laguerre import ATRAdaptiveLaguerreRSI, ATRAdaptiveLaguerreRSIConfig

# Load data
data = pd.read_csv("/workspace/ml_feature_set/sample_data/resampled_binance_BTC-2h.csv")
data["date"] = pd.to_datetime(data["date"])

# Create actual_ready_time column (simulates data availability delay)
data["actual_ready_time"] = data["date"] + timedelta(hours=2)

# Configure indicator with availability_column in config
config = ATRAdaptiveLaguerreRSIConfig.multi_interval(
    multiplier_1=4,
    multiplier_2=12,
    atr_period=14,
    smoothing_period=5,
    smoothing_method='ema',
    level_up=0.85,
    level_down=0.15,
    filter_redundancy=False,
    availability_column='actual_ready_time'  # THIS is where availability_column goes!
)

indicator = ATRAdaptiveLaguerreRSI(config=config)

# Test timestamp from validation Step 3/30
validation_time = pd.to_datetime("2025-03-17 06:00:00")
validation_ready_time = validation_time + timedelta(hours=2)

print(f"Testing timestamp {validation_time} (Step 3/30 from validation)")
print("=" * 80)
print()

# Generate features both ways
features_full = indicator.fit_transform_features(data)
pred_data = data[data["actual_ready_time"] <= validation_ready_time].copy()
features_pred = indicator.fit_transform_features(pred_data)

# Find matching index
match_idx = data[data["actual_ready_time"] == validation_ready_time].index[0]

# Test core RSI features
core_features = ["rsi_base", "rsi_mult1", "rsi_mult2"]

print("Core RSI Features:")
print("-" * 80)
print()

for feat in core_features:
    full_val = features_full.iloc[match_idx][feat]  # Direct column name, no prefix
    pred_val = features_pred.iloc[-1][feat]
    diff = abs(full_val - pred_val)

    print(f"{feat}:")
    print(f"  Full:  {full_val}")
    print(f"  Pred:  {pred_val}")
    print(f"  Diff:  {diff:.15f}")
    print(f"  {'PASS' if diff < 1e-10 else 'FAIL'}")
    print()

print("=" * 80)
print("Validation framework Step 3/30 showed (with atr_laguerre_ prefix added by FeatureSet wrapper):")
print("  atr_laguerre_rsi_mult1: full_data=0.7214841779676489, pred_data=0.6688954453883094")
print(f"  Expected diff: {abs(0.7214841779676489 - 0.6688954453883094):.15f}")
print()
print("Does our test match the framework?")
