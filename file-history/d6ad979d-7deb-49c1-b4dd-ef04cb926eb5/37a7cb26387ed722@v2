#!/usr/bin/env python3
"""
Generate storage-state.json for Manulife Par authentication.

This script:
1. Launches a browser window (non-headless)
2. Navigates to Manulife Par login page
3. Waits for you to manually complete passkey authentication
4. Saves the authenticated session to storage-state.json

Usage:
    doppler run --project insurance --config prd -- \\
      uv run --active python -m scripts.setup.generate_auth_state
"""

import os
import sys
from pathlib import Path
from playwright.sync_api import sync_playwright


def main():
    # Get URL from Doppler or use default
    manulife_url = os.getenv("MANULIFE_PAR_URL", "www.insurance.manulife.ca")

    # Ensure URL has protocol
    if not manulife_url.startswith(("http://", "https://")):
        manulife_url = f"https://{manulife_url}/dda"

    # Output path for storage state
    project_root = Path(__file__).parent.parent.parent
    storage_state_path = project_root / "storage-state.json"

    print(f"Manulife Par Authentication Setup")
    print(f"=" * 50)
    print(f"URL: {manulife_url}")
    print(f"Output: {storage_state_path}")
    print()
    print("Instructions:")
    print("1. Browser will launch in a moment")
    print("2. Complete passkey authentication manually")
    print("3. Once logged in, return to this terminal")
    print("4. Press ENTER to save the session")
    print()

    with sync_playwright() as p:
        # Launch browser in non-headless mode for manual interaction
        browser = p.chromium.launch(headless=False)
        context = browser.new_context()
        page = context.new_page()

        try:
            # Navigate to Manulife login
            print(f"Navigating to {manulife_url}...")
            page.goto(manulife_url, wait_until="networkidle")

            # Wait for user to authenticate
            print()
            print("Browser launched. Complete authentication, then press ENTER here...")
            input()

            # Check if we're still on login page (redirect check)
            current_url = page.url
            if "login" in current_url.lower() or "sign" in current_url.lower():
                print()
                print("WARNING: Still appears to be on login page")
                print(f"Current URL: {current_url}")
                print()
                proceed = input("Save session anyway? (y/N): ")
                if proceed.lower() != 'y':
                    print("Cancelled. Session not saved.")
                    return 1

            # Save storage state
            context.storage_state(path=str(storage_state_path))

            print()
            print(f"âœ“ Session saved to: {storage_state_path}")
            print()
            print("Next steps:")
            print("1. Verify file exists: ls -la storage-state.json")
            print("2. Run reconnaissance: doppler run --project insurance --config prd -- \\")
            print("                        uv run --active python -m scripts.playwright.reconnaissance")

            return 0

        except Exception as e:
            print(f"Error: {e}", file=sys.stderr)
            return 1
        finally:
            browser.close()


if __name__ == "__main__":
    sys.exit(main())
