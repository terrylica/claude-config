# Archived Scripts

**Date**: 2025-10-17
**Reason**: Project restructuring to follow Playwright best practices

---

## Archived Files

### `final_auth.py`
**Original Location**: `scripts/setup/final_auth.py`
**Replaced By**: [`/auth/passkey_authenticator.py`](/Users/terryli/own/insurance/auth/passkey_authenticator.py)
**Changes**:
- Refactored into reusable `PasskeyAuthenticator` class
- Can be used as both CLI script and importable module
- Same functionality, better modularity

**New Usage**:
```bash
# As CLI script
doppler run --project insurance --config prd -- \
  uv run --active python -m auth.passkey_authenticator

# As module
from auth.passkey_authenticator import PasskeyAuthenticator
authenticator = PasskeyAuthenticator(...)
storage_state = authenticator.authenticate()
```

### `reconnaissance.py`
**Original Location**: `scripts/playwright/reconnaissance.py`
**Replaced By**:
- [`/tests/reconnaissance/explore_welcome_page.py`](/Users/terryli/own/insurance/tests/reconnaissance/explore_welcome_page.py) - Welcome page exploration
- [`/tests/reconnaissance/explore_full_form.py`](/Users/terryli/own/insurance/tests/reconnaissance/explore_full_form.py) - Complete form exploration

**Changes**:
- Refactored to use pytest framework
- Leverages shared fixtures from conftest.py
- Uses ArtifactManager utility for DRY
- Split into focused test modules
- Follows Playwright best practices (page objects outside tests/)

**New Usage**:
```bash
# Run welcome page exploration
doppler run --project insurance --config prd -- \
  uv run --active pytest -v -m reconnaissance tests/reconnaissance/explore_welcome_page.py

# Run full form exploration
doppler run --project insurance --config prd -- \
  uv run --active pytest -v -m reconnaissance tests/reconnaissance/explore_full_form.py
```

---

## Why This Change?

**Research-Driven**: Based on comprehensive research of Playwright best practices, we restructured the project to follow industry-standard patterns:

1. **Page Object Model**: Page objects in `pages/` directory (outside `tests/`)
2. **Shared Utilities**: Common functions in `utils/` for DRY principle
3. **Pytest Fixtures**: Shared test fixtures in `tests/conftest.py`
4. **Test Organization**: Tests categorized by purpose (`reconnaissance/`, `automation/`)
5. **Modular Specifications**: Page-level specs in `specifications/pages/`

**Benefits**:
- Maintainability: Easier to update and extend
- Scalability: Ready for multi-page form automation
- Reusability: Shared components reduce duplication
- Testability: Pytest framework enables proper testing
- Best Practices: Follows Playwright documentation patterns

---

## Migration Guide

If you have any references to the old scripts:

**Before** (Old Structure):
```bash
python -m scripts.setup.final_auth
python -m scripts.playwright.reconnaissance
```

**After** (New Structure):
```bash
python -m auth.passkey_authenticator
pytest -v -m reconnaissance tests/reconnaissance/
```

**In Code** (Old):
```python
# No module import - scripts were standalone
```

**In Code** (New):
```python
from auth.passkey_authenticator import PasskeyAuthenticator
from pages.base_page import BasePage
from utils.artifact_manager import ArtifactManager
```

---

## References

- Project restructure documentation: `/docs/architecture/page-object-design.md`
- Test strategy: `/docs/architecture/test-strategy.md`
- Updated project memory: `/CLAUDE.md`
