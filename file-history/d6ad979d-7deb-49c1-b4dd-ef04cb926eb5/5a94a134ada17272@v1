"""Manulife Par form page object.

This page object encapsulates interactions with the Manulife Par insurance
application form, following the Page Object Model (POM) pattern.

Status: Minimal implementation - will be expanded during Phase 4 refactor

Reference: https://playwright.dev/python/docs/pom
"""

from pages.base_page import BasePage


class ManulifeParPage(BasePage):
    """Page object for Manulife Par insurance application form.

    This class will eventually contain methods for all form interactions,
    but currently serves as an example of the POM pattern during Phase 2.

    Attributes:
        page: Inherited from BasePage - Playwright Page instance
        welcome_url: Entry point URL for the form
    """

    def __init__(self, page):
        """Initialize Manulife Par page object.

        Args:
            page: Playwright Page object from fixture
        """
        super().__init__(page)
        self.welcome_url = "https://www.insurance.manulife.ca/dda/welcomeInformation"

    # Example method demonstrating POM pattern
    def select_riders(self, choice: str) -> None:
        """Select riders option using custom React component pattern.

        This method demonstrates the correct way to interact with custom
        React button components that require JavaScript event dispatch.

        Args:
            choice: "Yes" or "No"

        Raises:
            ValueError: If choice is not "Yes" or "No"

        Example:
            >>> manulife_page = ManulifeParPage(page)
            >>> manulife_page.select_riders("No")

        Technical Notes:
            Uses BasePage.dispatch_click_event() to handle custom React components.
            See: docs/analysis/custom-react-components-spike.md
        """
        if choice not in ["Yes", "No"]:
            raise ValueError(f"Invalid choice: {choice}. Must be 'Yes' or 'No'")

        # Map choice to element ID
        button_id = "RIDER_STATUS_ID-0" if choice == "Yes" else "RIDER_STATUS_ID-1"

        # Scroll into view first
        self.scroll_into_view(f"#{button_id}")

        # Use inherited dispatch_click_event for custom React component
        self.dispatch_click_event(f"#{button_id}")

    # TODO (Phase 4): Add remaining form interaction methods
    # - fill_first_name(name)
    # - fill_last_name(name)  
    # - select_sex(sex)
    # - fill_date_of_birth(day, month, year)
    # - select_smoking_status(status)
    # - fill_coverage_details(type, duration, amount, dividend)
    # - select_quebec_policy(choice)
    # - select_additional_products(choice)
    # - select_medical_info_method(method)
    # - submit_form()
