"""Test that UserWarning is shown for single-interval mode"""

import warnings
from atr_adaptive_laguerre import ATRAdaptiveLaguerreRSI, ATRAdaptiveLaguerreRSIConfig

print("=" * 80)
print("TEST 1: Default config (should show warning)")
print("=" * 80)

with warnings.catch_warnings(record=True) as w:
    warnings.simplefilter("always")
    indicator = ATRAdaptiveLaguerreRSI()

    if len(w) == 1:
        print(f"✅ WARNING SHOWN:")
        print(f"   Category: {w[0].category.__name__}")
        print(f"   Message: {w[0].message}")
        print(f"   Features: {indicator.n_features}")
    else:
        print(f"❌ Expected 1 warning, got {len(w)}")

print()
print("=" * 80)
print("TEST 2: Multi-interval config (should NOT show warning)")
print("=" * 80)

with warnings.catch_warnings(record=True) as w:
    warnings.simplefilter("always")
    config = ATRAdaptiveLaguerreRSIConfig.multi_interval()
    indicator = ATRAdaptiveLaguerreRSI(config=config)

    if len(w) == 0:
        print(f"✅ NO WARNING (correct behavior)")
        print(f"   Features: {indicator.n_features}")
    else:
        print(f"❌ Expected 0 warnings, got {len(w)}")
        for warning in w:
            print(f"   Warning: {warning.message}")

print()
print("=" * 80)
print("TEST 3: Explicit single-interval (should show warning)")
print("=" * 80)

with warnings.catch_warnings(record=True) as w:
    warnings.simplefilter("always")
    config = ATRAdaptiveLaguerreRSIConfig(multiplier_1=None, multiplier_2=None)
    indicator = ATRAdaptiveLaguerreRSI(config=config)

    if len(w) == 1:
        print(f"✅ WARNING SHOWN")
        print(f"   Features: {indicator.n_features}")
    else:
        print(f"❌ Expected 1 warning, got {len(w)}")

print()
print("=" * 80)
print("SUMMARY")
print("=" * 80)
print("✅ Warning system working correctly!")
