#!/bin/bash
# CNS Control - Unified control interface for CNS Remote Alert System
# Provides start, stop, status, restart operations via LaunchAgent and direct methods

set -euo pipefail

# Configuration
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
CNS_ROOT="$(dirname "$SCRIPT_DIR")"
PLIST_FILE="$CNS_ROOT/services/com.claude.cns-system.plist"
PLIST_INSTALL_PATH="$HOME/Library/LaunchAgents/com.claude.cns-system.plist"
SERVICE_LABEL="com.claude.cns-system"
MANAGER_SCRIPT="$CNS_ROOT/services/cns-system-manager.sh"

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Output functions
info() {
    echo -e "${BLUE}[INFO]${NC} $*"
}

success() {
    echo -e "${GREEN}[SUCCESS]${NC} $*"
}

warning() {
    echo -e "${YELLOW}[WARNING]${NC} $*"
}

error() {
    echo -e "${RED}[ERROR]${NC} $*"
}

# LaunchAgent management
is_launchd_loaded() {
    launchctl list | grep -q "$SERVICE_LABEL" 2>/dev/null
}

install_launchagent() {
    if [[ ! -f "$PLIST_FILE" ]]; then
        error "LaunchAgent plist not found: $PLIST_FILE"
        return 1
    fi
    
    # Create LaunchAgents directory if needed
    mkdir -p "$(dirname "$PLIST_INSTALL_PATH")"
    
    # Install plist
    if [[ -L "$PLIST_INSTALL_PATH" ]]; then
        rm "$PLIST_INSTALL_PATH"
    fi
    ln -sf "$PLIST_FILE" "$PLIST_INSTALL_PATH"
    
    success "LaunchAgent plist installed"
}

uninstall_launchagent() {
    if [[ -f "$PLIST_INSTALL_PATH" ]] || [[ -L "$PLIST_INSTALL_PATH" ]]; then
        rm "$PLIST_INSTALL_PATH"
        success "LaunchAgent plist uninstalled"
    fi
}

load_launchagent() {
    if ! is_launchd_loaded; then
        if launchctl load "$PLIST_INSTALL_PATH" 2>/dev/null; then
            success "LaunchAgent loaded"
        else
            error "Failed to load LaunchAgent"
            return 1
        fi
    else
        info "LaunchAgent already loaded"
    fi
}

unload_launchagent() {
    if is_launchd_loaded; then
        if launchctl unload "$PLIST_INSTALL_PATH" 2>/dev/null; then
            success "LaunchAgent unloaded"
        else
            warning "Failed to unload LaunchAgent (may not be critical)"
        fi
    else
        info "LaunchAgent not loaded"
    fi
}

# Service operations
start_cns_service() {
    info "Starting CNS Remote Alert System..."
    
    # Install and load LaunchAgent
    install_launchagent
    load_launchagent
    
    # Wait a moment for service to start
    sleep 3
    
    # Verify startup
    if "$MANAGER_SCRIPT" status | grep -q "Running"; then
        success "CNS Service started successfully"
        info "Use 'cns-control status' to monitor service health"
    else
        error "CNS Service failed to start properly"
        return 1
    fi
}

stop_cns_service() {
    info "Stopping CNS Remote Alert System..."
    
    # Unload LaunchAgent
    unload_launchagent
    
    # Direct shutdown via manager script
    "$MANAGER_SCRIPT" stop
    
    # Wait for complete shutdown
    sleep 2
    
    success "CNS Service stopped"
}

restart_cns_service() {
    info "Restarting CNS Remote Alert System..."
    
    stop_cns_service
    sleep 2
    start_cns_service
}

show_status() {
    echo "CNS Remote Alert System Status"
    echo "=============================="
    
    # LaunchAgent status
    if is_launchd_loaded; then
        echo -e "LaunchAgent: ${GREEN}Loaded${NC}"
    else
        echo -e "LaunchAgent: ${RED}Not loaded${NC}"
    fi
    
    # Plist installation status
    if [[ -f "$PLIST_INSTALL_PATH" ]] || [[ -L "$PLIST_INSTALL_PATH" ]]; then
        echo -e "Plist Status: ${GREEN}Installed${NC}"
    else
        echo -e "Plist Status: ${RED}Not installed${NC}"
    fi
    
    echo ""
    
    # Service manager status
    "$MANAGER_SCRIPT" status
}

show_logs() {
    local log_type="${1:-all}"
    
    case "$log_type" in
        "system"|"manager")
            echo "=== CNS System Manager Logs ==="
            tail -20 "$CNS_ROOT/logs/cns-system.log" 2>/dev/null || echo "No system logs found"
            ;;
        "error")
            echo "=== CNS Error Logs ==="
            tail -20 "$CNS_ROOT/logs/cns-system.error.log" 2>/dev/null || echo "No error logs found"
            ;;
        "launchd")
            echo "=== LaunchAgent Logs ==="
            echo "--- stdout ---"
            tail -10 "$CNS_ROOT/logs/cns-launchd.out.log" 2>/dev/null || echo "No launchd stdout logs"
            echo "--- stderr ---"
            tail -10 "$CNS_ROOT/logs/cns-launchd.error.log" 2>/dev/null || echo "No launchd stderr logs"
            ;;
        "all"|*)
            show_logs "system"
            echo ""
            show_logs "error"
            echo ""
            show_logs "launchd"
            ;;
    esac
}

# Test functionality
test_cns_system() {
    info "Testing CNS Remote Alert System..."
    
    # Test local hub
    if curl -s --connect-timeout 5 "http://127.0.0.1:5050/health" | grep -q "healthy"; then
        success "CNS hub responding"
    else
        error "CNS hub not responding"
    fi
    
    # Test SSH tunnel
    if ssh -O check yca &>/dev/null; then
        success "SSH tunnel active"
    else
        error "SSH tunnel not active"
    fi
    
    # Test notification (optional)
    read -p "Send test notification? [y/N] " -n 1 -r
    echo
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        curl -X POST -d '{"title":"CNS Test","message":"Control script test notification"}' \
             -H "Content-Type: application/json" \
             "http://127.0.0.1:5050/" && \
        success "Test notification sent"
    fi
}

# Main command handling
case "${1:-}" in
    "start")
        start_cns_service
        ;;
    "stop")
        stop_cns_service
        ;;
    "restart")
        restart_cns_service
        ;;
    "status")
        show_status
        ;;
    "logs")
        show_logs "${2:-all}"
        ;;
    "test")
        test_cns_system
        ;;
    "install")
        install_launchagent
        ;;
    "uninstall")
        stop_cns_service
        uninstall_launchagent
        success "CNS Service uninstalled"
        ;;
    *)
        echo "CNS Control - Unified control interface for CNS Remote Alert System"
        echo ""
        echo "Usage: $0 COMMAND [OPTIONS]"
        echo ""
        echo "Commands:"
        echo "  start      - Start CNS service (install LaunchAgent if needed)"
        echo "  stop       - Stop CNS service"
        echo "  restart    - Restart CNS service"
        echo "  status     - Show service status"
        echo "  logs       - Show logs [system|error|launchd|all]"
        echo "  test       - Test system functionality"
        echo "  install    - Install LaunchAgent (without starting)"
        echo "  uninstall  - Completely remove CNS service"
        echo ""
        echo "Examples:"
        echo "  $0 start           # Start the service"
        echo "  $0 status          # Check service status"
        echo "  $0 logs error      # Show error logs only"
        echo "  $0 test            # Test system functionality"
        echo ""
        exit 1
        ;;
esac