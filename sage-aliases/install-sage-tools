#!/bin/bash
# SAGE Tools - Team Installation Script
# Installs all SAGE tools to ~/.local/bin for universal access

set -euo pipefail

CLAUDE_DIR="${HOME}/.claude"
TOOL_DIR="${CLAUDE_DIR}/tools/sage-aliases"
BIN_DIR="${HOME}/.local/bin"

main() {
    echo "üîß SAGE Tools - Team Installer v1.0"
    echo "=================================="
    echo
    echo "üí° What this installer does:"
    echo "   ‚Ä¢ Copies SAGE command executables to ~/.local/bin (industry standard location)"
    echo "   ‚Ä¢ Ensures ~/.local/bin is in your PATH for global command access"
    echo "   ‚Ä¢ Validates installation works correctly across different shells"
    echo "   ‚Ä¢ No admin privileges required - everything stays in your user directory"
    echo
    echo "üéØ After installation, you'll have these commands available globally:"
    echo "   sage-dev     - SAGE development environment launcher"
    echo "   sage-sync    - Comprehensive workspace/session sync tool"
    echo "   sage-status  - Infrastructure health monitoring"
    echo "   gpu-ws       - GPU workstation connection and management"
    echo
    
    # Validate installation
    validate_installation
    
    # Setup directories
    setup_directories
    
    # Install executables
    install_executables
    
    # Setup PATH
    setup_path
    
    # Verify installation
    verify_installation
    
    echo
    echo "üéâ Installation Complete!"
    echo
    echo "Available commands:"
    echo "  sage-dev     - SAGE development launcher"
    echo "  sage-sync    - Comprehensive sync tool"
    echo "  sage-status  - Infrastructure health check"
    echo "  gpu-ws       - GPU workstation access"
    echo
    echo "üí° Restart your shell or run: source ~/.zshrc"
}

validate_installation() {
    echo "üîç Step 1: Validating Prerequisites"
    echo "   Checking if SAGE tools are available in the workspace..."
    echo
    
    if [[ ! -d "$TOOL_DIR" ]]; then
        echo "‚ùå SAGE tools not found at: $TOOL_DIR"
        echo
        echo "üö® Installation Error: Missing SAGE tools directory"
        echo "   This usually means the workspace wasn't cloned to the correct location."
        echo
        echo "üí° To fix this:"
        echo "   1. Make sure you cloned the repository to ~/.claude/"
        echo "   2. Command should be: git clone <repo-url> ~/.claude"
        echo "   3. Verify the directory exists: ls -la ~/.claude/tools/sage-aliases/"
        echo
        exit 1
    fi
    
    local tool_count=$(find "$TOOL_DIR/bin" -type f -executable 2>/dev/null | wc -l)
    echo "‚úÖ SAGE tools found at: $TOOL_DIR"
    echo "   Found $tool_count executable tools in workspace"
    echo
}

setup_directories() {
    echo "üìÅ Step 2: Setting Up Installation Directories"
    echo "   Creating ~/.local/bin directory for global command access..."
    echo
    echo "üí° Why ~/.local/bin?"
    echo "   ‚Ä¢ Industry standard location (used by pipx, uv, cargo, etc.)"
    echo "   ‚Ä¢ No admin privileges required (user-owned directory)"
    echo "   ‚Ä¢ Automatically included in PATH by most modern shells"
    echo "   ‚Ä¢ Survives system updates and doesn't conflict with system packages"
    echo
    
    if [[ -d "$BIN_DIR" ]]; then
        echo "‚úÖ Directory already exists: $BIN_DIR"
    else
        mkdir -p "$BIN_DIR"
        echo "‚úÖ Created directory: $BIN_DIR"
    fi
    echo
}

install_executables() {
    echo "üîó Step 3: Installing Command Executables"
    echo "   Copying SAGE tools to ~/.local/bin for global access..."
    echo
    echo "üí° What happens during installation:"
    echo "   ‚Ä¢ Each command is copied from workspace to ~/.local/bin"
    echo "   ‚Ä¢ Scripts use dynamic path resolution (work from any location)"
    echo "   ‚Ä¢ Execute permissions are set automatically"
    echo "   ‚Ä¢ Commands become available in any terminal session"
    echo
    
    local commands=("sage-dev" "sage-sync" "sage-status" "gpu-ws")
    local installed=0
    
    for cmd in "${commands[@]}"; do
        if [[ -f "$TOOL_DIR/bin/$cmd" ]]; then
            echo "   Installing $cmd..."
            if cp "$TOOL_DIR/bin/$cmd" "$BIN_DIR/$cmd" && chmod +x "$BIN_DIR/$cmd"; then
                echo "   ‚úÖ $cmd: Successfully installed and made executable"
                ((installed++))
            else
                echo "   ‚ùå $cmd: Installation failed (permission error?)"
            fi
        else
            echo "   ‚ö†Ô∏è  $cmd: Source file missing from workspace"
        fi
    done
    
    echo
    echo "üìä Installation Summary: $installed/${#commands[@]} commands installed successfully"
    
    if [[ $installed -eq 0 ]]; then
        echo "üö® No commands were installed! Check workspace integrity."
        exit 1
    elif [[ $installed -lt ${#commands[@]} ]]; then
        echo "‚ö†Ô∏è  Some commands failed to install, but continuing..."
    fi
    echo
}

setup_path() {
    echo "üõ§Ô∏è  Step 4: Configuring PATH for Global Command Access"
    echo "   Ensuring ~/.local/bin is in your PATH environment variable..."
    echo
    echo "üí° Why PATH configuration matters:"
    echo "   ‚Ä¢ PATH tells your shell where to find commands"
    echo "   ‚Ä¢ Without ~/.local/bin in PATH, commands won't be found globally"
    echo "   ‚Ä¢ Modern shells often include ~/.local/bin automatically"
    echo "   ‚Ä¢ We only modify your shell config if absolutely necessary"
    echo
    
    # Check current PATH
    if [[ ":$PATH:" == *":$HOME/.local/bin:"* ]]; then
        echo "‚úÖ PATH already includes ~/.local/bin"
        echo "   Your shell is already configured correctly!"
        echo
        return
    fi
    
    echo "‚ö†Ô∏è  ~/.local/bin not found in current PATH"
    echo "   Current PATH: $PATH"
    echo
    
    # Detect shell and config file
    local shell_config=""
    local shell_name=""
    
    if [[ -n "${ZSH_VERSION:-}" ]]; then
        shell_config="$HOME/.zshrc"
        shell_name="zsh"
    elif [[ -n "${BASH_VERSION:-}" ]]; then
        shell_config="$HOME/.bashrc"
        shell_name="bash"
    else
        echo "üö® Unknown shell detected"
        echo "   Please manually add ~/.local/bin to your PATH:"
        echo "   export PATH=\"\$HOME/.local/bin:\$PATH\""
        echo
        return
    fi
    
    echo "üîß Shell detected: $shell_name"
    echo "   Config file: $shell_config"
    echo
    
    # Add to shell config
    echo "üìù Adding ~/.local/bin to PATH in $shell_config"
    echo '' >> "$shell_config"
    echo '# SAGE Tools - Added by install-sage-tools' >> "$shell_config"
    echo 'export PATH="$HOME/.local/bin:$PATH"' >> "$shell_config"
    
    echo "‚úÖ PATH configuration added to $shell_config"
    echo "   You'll need to restart your shell or run: source $shell_config"
    echo
}

verify_installation() {
    echo "üîç Step 5: Verifying Installation"
    echo "   Testing that all commands are properly installed and executable..."
    echo
    echo "üí° What we're checking:"
    echo "   ‚Ä¢ Files exist in ~/.local/bin"
    echo "   ‚Ä¢ Files have execute permissions"
    echo "   ‚Ä¢ Commands can be found via PATH (if configured)"
    echo "   ‚Ä¢ Basic functionality test"
    echo
    
    local commands=("sage-dev" "sage-sync" "sage-status" "gpu-ws")
    local working=0
    local path_working=0
    
    for cmd in "${commands[@]}"; do
        echo "   Testing $cmd..."
        
        # Check file exists and is executable
        if [[ -x "$BIN_DIR/$cmd" ]]; then
            echo "   ‚úÖ $cmd: File exists and is executable"
            ((working++))
            
            # Test if command can be found via PATH
            if command -v "$cmd" >/dev/null 2>&1; then
                echo "   ‚úÖ $cmd: Available via PATH (ready to use)"
                ((path_working++))
            else
                echo "   ‚ö†Ô∏è  $cmd: Not in PATH (need to restart shell)"
            fi
        else
            echo "   ‚ùå $cmd: Missing or not executable"
        fi
        echo
    done
    
    echo "üìä Installation Verification Results:"
    echo "   Files installed: $working/${#commands[@]}"
    echo "   PATH accessible: $path_working/${#commands[@]}"
    echo
    
    if [[ $working -eq ${#commands[@]} ]]; then
        echo "üéØ All commands installed successfully!"
        
        if [[ $path_working -eq ${#commands[@]} ]]; then
            echo "üöÄ Commands are immediately available! Try: sage-dev --help"
        else
            echo "üîÑ Commands will be available after you restart your shell"
            echo "   Or run: source ~/.zshrc (or ~/.bashrc)"
        fi
    else
        echo "üö® Some commands failed to install"
        echo "   Check file permissions and disk space"
        return 1
    fi
    echo
}

# Run main function
main "$@"