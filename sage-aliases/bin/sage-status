#!/bin/bash
# SAGE Infrastructure Status Checker - Universal Access Command
# Part of SAGE Aliases Tool - ~/.claude/tools/sage-aliases/

# Get the directory where this script is located
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

# Determine tool directory based on installation location
if [[ "$SCRIPT_DIR" == *"/.local/bin" ]]; then
    # Installed via installer - use fixed path
    TOOL_DIR="$HOME/.claude/sage-aliases"
else
    # Running from workspace - use relative path
    TOOL_DIR="$(dirname "$SCRIPT_DIR")"
fi

# Source aliases for access to functions
source "$TOOL_DIR/aliases/sync-monitoring.sh"
source "$TOOL_DIR/aliases/network-diagnostics.sh"

# If arguments provided, handle specific checks
case "$1" in
    "sync")
        echo "🔄 Syncthing Status:"
        curl -s http://localhost:8384/rest/db/status?folder=nt-workspace | jq -r .state
        ;;
    "network"|"net")
        echo "🌐 Network Status:"
        sudo zerotier-cli peers | grep 8f53f201b7 | grep DIRECT && echo "✅ DIRECT connection active" || echo "⚠️  Using RELAY connection"
        ping -c 1 172.25.253.142 > /dev/null 2>&1 && echo "✅ GPU workstation reachable" || echo "❌ Connectivity failed"
        ;;
    "gpu")
        echo "🎮 GPU Workstation Status:"
        ssh zerotier-remote "hostname && nvidia-smi --query-gpu=gpu_name,memory.used,memory.total --format=csv,noheader,nounits"
        ;;
    "models")
        echo "🧠 SAGE Models Status:"
        echo "✅ AlphaForge: $(ls ~/eon/nt/repos/alphaforge/ > /dev/null 2>&1 && echo "Available" || echo "Missing")"
        echo "✅ catch22: $(cd ~/eon/nt && uv run python -c "import pycatch22; print('Available')" 2>/dev/null || echo "Not installed")"
        echo "✅ tsfresh: $(cd ~/eon/nt && uv run python -c "import tsfresh; print('Available')" 2>/dev/null || echo "Not installed")"
        echo "✅ TiRex GPU: $(ssh zerotier-remote "cd ~/eon/nt && source .venv/bin/activate && python3 -c \"import torch; print('Available' if torch.cuda.is_available() else 'CUDA not available')\"" 2>/dev/null || echo "Remote check failed")"
        ;;
    "help"|"-h"|"--help")
        echo "SAGE Infrastructure Status Checker

Usage: sage-status [component]

Components:
  (no args)    Full infrastructure health check
  sync         Syncthing synchronization status
  network      ZeroTier network connectivity
  gpu          GPU workstation hardware status
  models       SAGE models availability

Examples:
  sage-status           # Complete infrastructure check
  sage-status sync      # Check file synchronization
  sage-status network   # Check network connectivity
  sage-status gpu       # Check GPU workstation
  sage-status models    # Check SAGE models availability

Part of SAGE Aliases Tool - ~/.claude/tools/sage-aliases/"
        exit 0
        ;;
    "")
        # Full infrastructure health check
        echo "🏥 SAGE Infrastructure Health Check - $(date)"
        echo ""
        
        echo "=== Network Status ==="
        if sudo zerotier-cli peers | grep 8f53f201b7 | grep -q DIRECT; then
            echo "✅ ZeroTier: DIRECT connection active"
        else
            echo "⚠️  ZeroTier: Using RELAY connection"
        fi
        
        if ping -c 1 172.25.253.142 > /dev/null 2>&1; then
            echo "✅ Connectivity: GPU workstation reachable"
        else
            echo "❌ Connectivity: GPU workstation unreachable"
        fi
        
        echo ""
        echo "=== Synchronization Status ==="
        sync_state=$(curl -s http://localhost:8384/rest/db/status?folder=nt-workspace | jq -r .state 2>/dev/null)
        if [ "$sync_state" = "idle" ]; then
            echo "✅ Syncthing: Healthy ($sync_state)"
        else
            echo "⚠️  Syncthing: $sync_state"
        fi
        
        echo ""
        echo "=== GPU Workstation Status ==="
        if ssh -o ConnectTimeout=5 zerotier-remote "nvidia-smi --query-gpu=gpu_name,memory.used,memory.total --format=csv,noheader,nounits" 2>/dev/null; then
            echo "✅ GPU workstation responsive"
        else
            echo "❌ GPU workstation not accessible"
        fi
        
        echo ""
        echo "=== SAGE Models Status ==="
        echo "AlphaForge: $(ls ~/eon/nt/repos/alphaforge/ > /dev/null 2>&1 && echo "✅ Available" || echo "❌ Missing")"
        echo "catch22: $(python3 -c "import pycatch22; print('✅ Available')" 2>/dev/null || echo "❌ Not installed")"
        echo "tsfresh: $(python3 -c "import tsfresh; print('✅ Available')" 2>/dev/null || echo "❌ Not installed")"
        echo "TiRex GPU: $(ssh zerotier-remote "python3 -c \"import torch; print('✅ Available' if torch.cuda.is_available() else '⚠️  CUDA not available')\"" 2>/dev/null || echo "❌ Remote check failed")"
        
        echo ""
        echo "🎯 Health Check Complete"
        ;;
    *)
        echo "Unknown component: $1"
        echo "Use 'sage-status help' for available components"
        exit 1
        ;;
esac